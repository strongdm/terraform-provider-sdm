// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// ApprovalWorkflowStepsClient is the client API for ApprovalWorkflowSteps service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Deprecated: Do not use.
type ApprovalWorkflowStepsClient interface {
	// Deprecated: Create creates a new approval workflow step.
	Create(ctx context.Context, in *ApprovalWorkflowStepCreateRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepCreateResponse, error)
	// Deprecated: Get reads one approval workflow step by ID.
	Get(ctx context.Context, in *ApprovalWorkflowStepGetRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepGetResponse, error)
	// Deprecated: Delete deletes an existing approval workflow step.
	Delete(ctx context.Context, in *ApprovalWorkflowStepDeleteRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepDeleteResponse, error)
	// Deprecated: Lists existing approval workflow steps.
	List(ctx context.Context, in *ApprovalWorkflowStepListRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepListResponse, error)
}

type approvalWorkflowStepsClient struct {
	cc grpc.ClientConnInterface
}

// Deprecated: Do not use.
func NewApprovalWorkflowStepsClient(cc grpc.ClientConnInterface) ApprovalWorkflowStepsClient {
	return &approvalWorkflowStepsClient{cc}
}

func (c *approvalWorkflowStepsClient) Create(ctx context.Context, in *ApprovalWorkflowStepCreateRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepCreateResponse, error) {
	out := new(ApprovalWorkflowStepCreateResponse)
	err := c.cc.Invoke(ctx, "/v1.ApprovalWorkflowSteps/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalWorkflowStepsClient) Get(ctx context.Context, in *ApprovalWorkflowStepGetRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepGetResponse, error) {
	out := new(ApprovalWorkflowStepGetResponse)
	err := c.cc.Invoke(ctx, "/v1.ApprovalWorkflowSteps/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalWorkflowStepsClient) Delete(ctx context.Context, in *ApprovalWorkflowStepDeleteRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepDeleteResponse, error) {
	out := new(ApprovalWorkflowStepDeleteResponse)
	err := c.cc.Invoke(ctx, "/v1.ApprovalWorkflowSteps/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalWorkflowStepsClient) List(ctx context.Context, in *ApprovalWorkflowStepListRequest, opts ...grpc.CallOption) (*ApprovalWorkflowStepListResponse, error) {
	out := new(ApprovalWorkflowStepListResponse)
	err := c.cc.Invoke(ctx, "/v1.ApprovalWorkflowSteps/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApprovalWorkflowStepsServer is the server API for ApprovalWorkflowSteps service.
// All implementations must embed UnimplementedApprovalWorkflowStepsServer
// for forward compatibility
//
// Deprecated: Do not use.
type ApprovalWorkflowStepsServer interface {
	// Deprecated: Create creates a new approval workflow step.
	Create(context.Context, *ApprovalWorkflowStepCreateRequest) (*ApprovalWorkflowStepCreateResponse, error)
	// Deprecated: Get reads one approval workflow step by ID.
	Get(context.Context, *ApprovalWorkflowStepGetRequest) (*ApprovalWorkflowStepGetResponse, error)
	// Deprecated: Delete deletes an existing approval workflow step.
	Delete(context.Context, *ApprovalWorkflowStepDeleteRequest) (*ApprovalWorkflowStepDeleteResponse, error)
	// Deprecated: Lists existing approval workflow steps.
	List(context.Context, *ApprovalWorkflowStepListRequest) (*ApprovalWorkflowStepListResponse, error)
	mustEmbedUnimplementedApprovalWorkflowStepsServer()
}

// UnimplementedApprovalWorkflowStepsServer must be embedded to have forward compatible implementations.
type UnimplementedApprovalWorkflowStepsServer struct {
}

func (UnimplementedApprovalWorkflowStepsServer) Create(context.Context, *ApprovalWorkflowStepCreateRequest) (*ApprovalWorkflowStepCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedApprovalWorkflowStepsServer) Get(context.Context, *ApprovalWorkflowStepGetRequest) (*ApprovalWorkflowStepGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedApprovalWorkflowStepsServer) Delete(context.Context, *ApprovalWorkflowStepDeleteRequest) (*ApprovalWorkflowStepDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedApprovalWorkflowStepsServer) List(context.Context, *ApprovalWorkflowStepListRequest) (*ApprovalWorkflowStepListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedApprovalWorkflowStepsServer) mustEmbedUnimplementedApprovalWorkflowStepsServer() {}

// UnsafeApprovalWorkflowStepsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApprovalWorkflowStepsServer will
// result in compilation errors.
type UnsafeApprovalWorkflowStepsServer interface {
	mustEmbedUnimplementedApprovalWorkflowStepsServer()
}

// Deprecated: Do not use.
func RegisterApprovalWorkflowStepsServer(s grpc.ServiceRegistrar, srv ApprovalWorkflowStepsServer) {
	s.RegisterService(&_ApprovalWorkflowSteps_serviceDesc, srv)
}

func _ApprovalWorkflowSteps_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApprovalWorkflowStepCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalWorkflowStepsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ApprovalWorkflowSteps/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalWorkflowStepsServer).Create(ctx, req.(*ApprovalWorkflowStepCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalWorkflowSteps_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApprovalWorkflowStepGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalWorkflowStepsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ApprovalWorkflowSteps/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalWorkflowStepsServer).Get(ctx, req.(*ApprovalWorkflowStepGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalWorkflowSteps_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApprovalWorkflowStepDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalWorkflowStepsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ApprovalWorkflowSteps/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalWorkflowStepsServer).Delete(ctx, req.(*ApprovalWorkflowStepDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalWorkflowSteps_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApprovalWorkflowStepListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalWorkflowStepsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ApprovalWorkflowSteps/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalWorkflowStepsServer).List(ctx, req.(*ApprovalWorkflowStepListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApprovalWorkflowSteps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ApprovalWorkflowSteps",
	HandlerType: (*ApprovalWorkflowStepsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ApprovalWorkflowSteps_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ApprovalWorkflowSteps_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ApprovalWorkflowSteps_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ApprovalWorkflowSteps_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "approval_workflow_steps.proto",
}
