// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: groups_roles.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GroupRoleCreateRequest specifies a group role to create.
type GroupRoleCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *CreateRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Parameters to define the new GroupRole.
	GroupRole *GroupRole `protobuf:"bytes,2,opt,name=group_role,json=groupRole,proto3" json:"group_role,omitempty"`
}

func (x *GroupRoleCreateRequest) Reset() {
	*x = GroupRoleCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleCreateRequest) ProtoMessage() {}

func (x *GroupRoleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleCreateRequest.ProtoReflect.Descriptor instead.
func (*GroupRoleCreateRequest) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{0}
}

func (x *GroupRoleCreateRequest) GetMeta() *CreateRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleCreateRequest) GetGroupRole() *GroupRole {
	if x != nil {
		return x.GroupRole
	}
	return nil
}

// GroupRoleCreateResponse reports the result of a create.
type GroupRoleCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *CreateResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The created GroupRole.
	GroupRole *GroupRole `protobuf:"bytes,2,opt,name=group_role,json=groupRole,proto3" json:"group_role,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *GroupRoleCreateResponse) Reset() {
	*x = GroupRoleCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleCreateResponse) ProtoMessage() {}

func (x *GroupRoleCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleCreateResponse.ProtoReflect.Descriptor instead.
func (*GroupRoleCreateResponse) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{1}
}

func (x *GroupRoleCreateResponse) GetMeta() *CreateResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleCreateResponse) GetGroupRole() *GroupRole {
	if x != nil {
		return x.GroupRole
	}
	return nil
}

func (x *GroupRoleCreateResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// GroupRoleGetRequest specifies which GroupRole to retrieve.
type GroupRoleGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *GetRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The unique identifier of the GroupRole to retrieve.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GroupRoleGetRequest) Reset() {
	*x = GroupRoleGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleGetRequest) ProtoMessage() {}

func (x *GroupRoleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleGetRequest.ProtoReflect.Descriptor instead.
func (*GroupRoleGetRequest) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{2}
}

func (x *GroupRoleGetRequest) GetMeta() *GetRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GroupRoleGetResponse returns a requested GroupRole.
type GroupRoleGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *GetResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The requested GroupRole.
	GroupRole *GroupRole `protobuf:"bytes,2,opt,name=group_role,json=groupRole,proto3" json:"group_role,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *GroupRoleGetResponse) Reset() {
	*x = GroupRoleGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleGetResponse) ProtoMessage() {}

func (x *GroupRoleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleGetResponse.ProtoReflect.Descriptor instead.
func (*GroupRoleGetResponse) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{3}
}

func (x *GroupRoleGetResponse) GetMeta() *GetResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleGetResponse) GetGroupRole() *GroupRole {
	if x != nil {
		return x.GroupRole
	}
	return nil
}

func (x *GroupRoleGetResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// GroupRoleDeleteRequest identifies a group role by ID to delete.
type GroupRoleDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *DeleteRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The unique identifier of the group to delete.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GroupRoleDeleteRequest) Reset() {
	*x = GroupRoleDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleDeleteRequest) ProtoMessage() {}

func (x *GroupRoleDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleDeleteRequest.ProtoReflect.Descriptor instead.
func (*GroupRoleDeleteRequest) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{4}
}

func (x *GroupRoleDeleteRequest) GetMeta() *DeleteRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GroupRoleDeleteResponse returns information about a group that was deleted.
type GroupRoleDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *DeleteResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,2,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
	// The deleted GroupRole.
	GroupRole *GroupRole `protobuf:"bytes,3,opt,name=group_role,json=groupRole,proto3" json:"group_role,omitempty"`
}

func (x *GroupRoleDeleteResponse) Reset() {
	*x = GroupRoleDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleDeleteResponse) ProtoMessage() {}

func (x *GroupRoleDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleDeleteResponse.ProtoReflect.Descriptor instead.
func (*GroupRoleDeleteResponse) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{5}
}

func (x *GroupRoleDeleteResponse) GetMeta() *DeleteResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleDeleteResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

func (x *GroupRoleDeleteResponse) GetGroupRole() *GroupRole {
	if x != nil {
		return x.GroupRole
	}
	return nil
}

// GroupRoleListRequest specifies criteria for retrieving a list of groups.
type GroupRoleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Paging parameters for the query.
	Meta *ListRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// A human-readable filter query string.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GroupRoleListRequest) Reset() {
	*x = GroupRoleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleListRequest) ProtoMessage() {}

func (x *GroupRoleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleListRequest.ProtoReflect.Descriptor instead.
func (*GroupRoleListRequest) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{6}
}

func (x *GroupRoleListRequest) GetMeta() *ListRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleListRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// GroupRoleListResponse returns a list of group roles that meet the criteria of a
// GroupRoleListRequest.
type GroupRoleListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Paging information for the query.
	Meta *ListResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// A single page of results matching the list request criteria.
	GroupsRoles []*GroupRole `protobuf:"bytes,2,rep,name=groups_roles,json=groupsRoles,proto3" json:"groups_roles,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *GroupRoleListResponse) Reset() {
	*x = GroupRoleListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRoleListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRoleListResponse) ProtoMessage() {}

func (x *GroupRoleListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRoleListResponse.ProtoReflect.Descriptor instead.
func (*GroupRoleListResponse) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{7}
}

func (x *GroupRoleListResponse) GetMeta() *ListResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GroupRoleListResponse) GetGroupsRoles() []*GroupRole {
	if x != nil {
		return x.GroupsRoles
	}
	return nil
}

func (x *GroupRoleListResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// A GroupRole assigns a Group to a Role.
type GroupRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the GroupRole.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The assigned Group ID.
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// The assigned Role ID.
	RoleId string `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The name of the assigned Group.
	GroupName string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// The name of the assigned Role.
	RoleName string `protobuf:"bytes,5,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *GroupRole) Reset() {
	*x = GroupRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groups_roles_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRole) ProtoMessage() {}

func (x *GroupRole) ProtoReflect() protoreflect.Message {
	mi := &file_groups_roles_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRole.ProtoReflect.Descriptor instead.
func (*GroupRole) Descriptor() ([]byte, []int) {
	return file_groups_roles_proto_rawDescGZIP(), []int{8}
}

func (x *GroupRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupRole) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupRole) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GroupRole) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupRole) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

var File_groups_roles_proto protoreflect.FileDescriptor

var file_groups_roles_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x38, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x3a, 0x18, 0xfa, 0xf8, 0xb3, 0x07, 0x13, 0xa8, 0xf3,
	0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3, 0x07, 0x03, 0x63, 0x6c,
	0x69, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x38, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09,
	0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x18, 0xfa, 0xf8, 0xb3, 0x07, 0x13,
	0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3, 0x07, 0x03,
	0x63, 0x6c, 0x69, 0x22, 0x77, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x3a, 0x18, 0xfa, 0xf8, 0xb3, 0x07, 0x13, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3,
	0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3, 0x07, 0x03, 0x63, 0x6c, 0x69, 0x22, 0xe5, 0x01, 0x0a,
	0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0xf2, 0xf8,
	0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x38,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52,
	0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x18, 0xfa, 0xf8, 0xb3, 0x07,
	0x13, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3, 0x07,
	0x03, 0x63, 0x6c, 0x69, 0x22, 0x7d, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05,
	0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x18, 0xfa, 0xf8, 0xb3, 0x07, 0x13,
	0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3, 0x07, 0x03,
	0x63, 0x6c, 0x69, 0x22, 0xeb, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05,
	0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0a, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3,
	0x07, 0x01, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x38, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x3a, 0x18, 0xfa, 0xf8, 0xb3, 0x07, 0x13, 0xa8, 0xf3,
	0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3, 0x07, 0x03, 0x63, 0x6c,
	0x69, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3,
	0xb3, 0x07, 0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3a, 0x18, 0xfa, 0xf8, 0xb3,
	0x07, 0x13, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3,
	0x07, 0x03, 0x63, 0x6c, 0x69, 0x22, 0xdf, 0x01, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3c, 0x0a,
	0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb8, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0b,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3,
	0x07, 0x01, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x18, 0xfa,
	0xf8, 0xb3, 0x07, 0x13, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2,
	0xf3, 0xb3, 0x07, 0x03, 0x63, 0x6c, 0x69, 0x22, 0x98, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0f, 0xf2, 0xf8, 0xb3, 0x07, 0x0a, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xc0,
	0xf3, 0xb3, 0x07, 0x01, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xf2, 0xf8, 0xb3, 0x07, 0x0a, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xc0, 0xf3, 0xb3, 0x07, 0x01, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xf2, 0xf8, 0xb3,
	0x07, 0x19, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x98, 0xf4, 0xb3, 0x07, 0x01, 0xb2, 0xf4, 0xb3, 0x07,
	0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xf2, 0xf8, 0xb3, 0x07, 0x1e,
	0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x98, 0xf4, 0xb3, 0x07, 0x01, 0xb2, 0xf4, 0xb3, 0x07, 0x0a, 0x67,
	0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0xd0, 0xf4, 0xb3, 0x07, 0x01, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x18, 0xfa, 0xf8, 0xb3, 0x07, 0x13, 0xa8,
	0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x01, 0x2a, 0xd2, 0xf3, 0xb3, 0x07, 0x03, 0x63,
	0x6c, 0x69, 0x32, 0xea, 0x03, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x6a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xf9, 0xb3, 0x07, 0x09, 0xa2, 0xf3, 0xb3, 0x07,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x14, 0xaa, 0xf3, 0xb3, 0x07, 0x0f, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x65,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xf9, 0xb3, 0x07, 0x08, 0xa2,
	0xf3, 0xb3, 0x07, 0x03, 0x67, 0x65, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x19, 0xaa, 0xf3, 0xb3, 0x07,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xf9, 0xb3, 0x07, 0x0b, 0xa2,
	0xf3, 0xb3, 0x07, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x82, 0xf9, 0xb3, 0x07, 0x19, 0xaa,
	0xf3, 0xb3, 0x07, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x63, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xf9, 0xb3, 0x07, 0x08, 0xa2, 0xf3, 0xb3, 0x07,
	0x03, 0x67, 0x65, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x14, 0xaa, 0xf3, 0xb3, 0x07, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x30, 0xca,
	0xf9, 0xb3, 0x07, 0x2b, 0xc2, 0xf9, 0xb3, 0x07, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f,
	0x6c, 0x65, 0xca, 0xf9, 0xb3, 0x07, 0x01, 0x2a, 0xca, 0xf9, 0xb3, 0x07, 0x03, 0x63, 0x6c, 0x69,
	0xd2, 0xf9, 0xb3, 0x07, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x72, 0x6f, 0x6c, 0x65, 0x2d, 0x42,
	0x7f, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e, 0x67, 0x42, 0x13, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e,
	0x67, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74,
	0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2d,
	0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xc2, 0x92, 0xb4, 0x07, 0x06, 0xa2, 0x8c, 0xb4,
	0x07, 0x01, 0x2a, 0xc2, 0x92, 0xb4, 0x07, 0x08, 0xa2, 0x8c, 0xb4, 0x07, 0x03, 0x63, 0x6c, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_groups_roles_proto_rawDescOnce sync.Once
	file_groups_roles_proto_rawDescData = file_groups_roles_proto_rawDesc
)

func file_groups_roles_proto_rawDescGZIP() []byte {
	file_groups_roles_proto_rawDescOnce.Do(func() {
		file_groups_roles_proto_rawDescData = protoimpl.X.CompressGZIP(file_groups_roles_proto_rawDescData)
	})
	return file_groups_roles_proto_rawDescData
}

var file_groups_roles_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_groups_roles_proto_goTypes = []interface{}{
	(*GroupRoleCreateRequest)(nil),  // 0: v1.GroupRoleCreateRequest
	(*GroupRoleCreateResponse)(nil), // 1: v1.GroupRoleCreateResponse
	(*GroupRoleGetRequest)(nil),     // 2: v1.GroupRoleGetRequest
	(*GroupRoleGetResponse)(nil),    // 3: v1.GroupRoleGetResponse
	(*GroupRoleDeleteRequest)(nil),  // 4: v1.GroupRoleDeleteRequest
	(*GroupRoleDeleteResponse)(nil), // 5: v1.GroupRoleDeleteResponse
	(*GroupRoleListRequest)(nil),    // 6: v1.GroupRoleListRequest
	(*GroupRoleListResponse)(nil),   // 7: v1.GroupRoleListResponse
	(*GroupRole)(nil),               // 8: v1.GroupRole
	(*CreateRequestMetadata)(nil),   // 9: v1.CreateRequestMetadata
	(*CreateResponseMetadata)(nil),  // 10: v1.CreateResponseMetadata
	(*RateLimitMetadata)(nil),       // 11: v1.RateLimitMetadata
	(*GetRequestMetadata)(nil),      // 12: v1.GetRequestMetadata
	(*GetResponseMetadata)(nil),     // 13: v1.GetResponseMetadata
	(*DeleteRequestMetadata)(nil),   // 14: v1.DeleteRequestMetadata
	(*DeleteResponseMetadata)(nil),  // 15: v1.DeleteResponseMetadata
	(*ListRequestMetadata)(nil),     // 16: v1.ListRequestMetadata
	(*ListResponseMetadata)(nil),    // 17: v1.ListResponseMetadata
}
var file_groups_roles_proto_depIdxs = []int32{
	9,  // 0: v1.GroupRoleCreateRequest.meta:type_name -> v1.CreateRequestMetadata
	8,  // 1: v1.GroupRoleCreateRequest.group_role:type_name -> v1.GroupRole
	10, // 2: v1.GroupRoleCreateResponse.meta:type_name -> v1.CreateResponseMetadata
	8,  // 3: v1.GroupRoleCreateResponse.group_role:type_name -> v1.GroupRole
	11, // 4: v1.GroupRoleCreateResponse.rate_limit:type_name -> v1.RateLimitMetadata
	12, // 5: v1.GroupRoleGetRequest.meta:type_name -> v1.GetRequestMetadata
	13, // 6: v1.GroupRoleGetResponse.meta:type_name -> v1.GetResponseMetadata
	8,  // 7: v1.GroupRoleGetResponse.group_role:type_name -> v1.GroupRole
	11, // 8: v1.GroupRoleGetResponse.rate_limit:type_name -> v1.RateLimitMetadata
	14, // 9: v1.GroupRoleDeleteRequest.meta:type_name -> v1.DeleteRequestMetadata
	15, // 10: v1.GroupRoleDeleteResponse.meta:type_name -> v1.DeleteResponseMetadata
	11, // 11: v1.GroupRoleDeleteResponse.rate_limit:type_name -> v1.RateLimitMetadata
	8,  // 12: v1.GroupRoleDeleteResponse.group_role:type_name -> v1.GroupRole
	16, // 13: v1.GroupRoleListRequest.meta:type_name -> v1.ListRequestMetadata
	17, // 14: v1.GroupRoleListResponse.meta:type_name -> v1.ListResponseMetadata
	8,  // 15: v1.GroupRoleListResponse.groups_roles:type_name -> v1.GroupRole
	11, // 16: v1.GroupRoleListResponse.rate_limit:type_name -> v1.RateLimitMetadata
	0,  // 17: v1.GroupsRoles.Create:input_type -> v1.GroupRoleCreateRequest
	2,  // 18: v1.GroupsRoles.Get:input_type -> v1.GroupRoleGetRequest
	4,  // 19: v1.GroupsRoles.Delete:input_type -> v1.GroupRoleDeleteRequest
	6,  // 20: v1.GroupsRoles.List:input_type -> v1.GroupRoleListRequest
	1,  // 21: v1.GroupsRoles.Create:output_type -> v1.GroupRoleCreateResponse
	3,  // 22: v1.GroupsRoles.Get:output_type -> v1.GroupRoleGetResponse
	5,  // 23: v1.GroupsRoles.Delete:output_type -> v1.GroupRoleDeleteResponse
	7,  // 24: v1.GroupsRoles.List:output_type -> v1.GroupRoleListResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_groups_roles_proto_init() }
func file_groups_roles_proto_init() {
	if File_groups_roles_proto != nil {
		return
	}
	file_options_proto_init()
	file_spec_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_groups_roles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRoleListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groups_roles_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_groups_roles_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_groups_roles_proto_goTypes,
		DependencyIndexes: file_groups_roles_proto_depIdxs,
		MessageInfos:      file_groups_roles_proto_msgTypes,
	}.Build()
	File_groups_roles_proto = out.File
	file_groups_roles_proto_rawDesc = nil
	file_groups_roles_proto_goTypes = nil
	file_groups_roles_proto_depIdxs = nil
}
