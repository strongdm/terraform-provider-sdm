// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: secret_engine_policy.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretEnginePasswordPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Password length.
	Length uint32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	// If set to true do not include upper case letters when generating password
	ExcludeUpperCase bool `protobuf:"varint,2,opt,name=exclude_upper_case,json=excludeUpperCase,proto3" json:"exclude_upper_case,omitempty"`
	// Numbers of digits to use when generating password
	NumDigits uint32 `protobuf:"varint,3,opt,name=num_digits,json=numDigits,proto3" json:"num_digits,omitempty"`
	// Number of symbols to use when generating password
	NumSymbols uint32 `protobuf:"varint,4,opt,name=num_symbols,json=numSymbols,proto3" json:"num_symbols,omitempty"`
	// If set to true allows for consecutive characters to repeat itself
	AllowRepeat bool `protobuf:"varint,5,opt,name=allow_repeat,json=allowRepeat,proto3" json:"allow_repeat,omitempty"`
	// Characters to exclude when generating password
	ExcludeCharacters string `protobuf:"bytes,6,opt,name=exclude_characters,json=excludeCharacters,proto3" json:"exclude_characters,omitempty"`
}

func (x *SecretEnginePasswordPolicy) Reset() {
	*x = SecretEnginePasswordPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secret_engine_policy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretEnginePasswordPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretEnginePasswordPolicy) ProtoMessage() {}

func (x *SecretEnginePasswordPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_secret_engine_policy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretEnginePasswordPolicy.ProtoReflect.Descriptor instead.
func (*SecretEnginePasswordPolicy) Descriptor() ([]byte, []int) {
	return file_secret_engine_policy_proto_rawDescGZIP(), []int{0}
}

func (x *SecretEnginePasswordPolicy) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *SecretEnginePasswordPolicy) GetExcludeUpperCase() bool {
	if x != nil {
		return x.ExcludeUpperCase
	}
	return false
}

func (x *SecretEnginePasswordPolicy) GetNumDigits() uint32 {
	if x != nil {
		return x.NumDigits
	}
	return 0
}

func (x *SecretEnginePasswordPolicy) GetNumSymbols() uint32 {
	if x != nil {
		return x.NumSymbols
	}
	return 0
}

func (x *SecretEnginePasswordPolicy) GetAllowRepeat() bool {
	if x != nil {
		return x.AllowRepeat
	}
	return false
}

func (x *SecretEnginePasswordPolicy) GetExcludeCharacters() string {
	if x != nil {
		return x.ExcludeCharacters
	}
	return ""
}

type SecretEnginePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Policy for password
	PasswordPolicy *SecretEnginePasswordPolicy `protobuf:"bytes,1,opt,name=password_policy,json=passwordPolicy,proto3" json:"password_policy,omitempty"`
}

func (x *SecretEnginePolicy) Reset() {
	*x = SecretEnginePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secret_engine_policy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretEnginePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretEnginePolicy) ProtoMessage() {}

func (x *SecretEnginePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_secret_engine_policy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretEnginePolicy.ProtoReflect.Descriptor instead.
func (*SecretEnginePolicy) Descriptor() ([]byte, []int) {
	return file_secret_engine_policy_proto_rawDescGZIP(), []int{1}
}

func (x *SecretEnginePolicy) GetPasswordPolicy() *SecretEnginePasswordPolicy {
	if x != nil {
		return x.PasswordPolicy
	}
	return nil
}

var File_secret_engine_policy_proto protoreflect.FileDescriptor

var file_secret_engine_policy_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31,
	0x1a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc8, 0x02, 0x0a, 0x1a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x22,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a,
	0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x38, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a,
	0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x55, 0x70, 0x70, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0a,
	0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x6e, 0x75,
	0x6d, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xf2, 0xf8,
	0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07,
	0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x12, 0x39, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x11, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x3a, 0x0a,
	0xfa, 0xf8, 0xb3, 0x07, 0x05, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0x22, 0x75, 0x0a, 0x12, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x53, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05,
	0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x0a, 0xfa, 0xf8, 0xb3, 0x07, 0x05, 0xa8, 0xf3, 0xb3, 0x07,
	0x01, 0x42, 0x6e, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e, 0x67, 0x42, 0x1a,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x50, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e, 0x67, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2f,
	0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f,
	0x76, 0x33, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_secret_engine_policy_proto_rawDescOnce sync.Once
	file_secret_engine_policy_proto_rawDescData = file_secret_engine_policy_proto_rawDesc
)

func file_secret_engine_policy_proto_rawDescGZIP() []byte {
	file_secret_engine_policy_proto_rawDescOnce.Do(func() {
		file_secret_engine_policy_proto_rawDescData = protoimpl.X.CompressGZIP(file_secret_engine_policy_proto_rawDescData)
	})
	return file_secret_engine_policy_proto_rawDescData
}

var file_secret_engine_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_secret_engine_policy_proto_goTypes = []interface{}{
	(*SecretEnginePasswordPolicy)(nil), // 0: v1.SecretEnginePasswordPolicy
	(*SecretEnginePolicy)(nil),         // 1: v1.SecretEnginePolicy
}
var file_secret_engine_policy_proto_depIdxs = []int32{
	0, // 0: v1.SecretEnginePolicy.password_policy:type_name -> v1.SecretEnginePasswordPolicy
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_secret_engine_policy_proto_init() }
func file_secret_engine_policy_proto_init() {
	if File_secret_engine_policy_proto != nil {
		return
	}
	file_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_secret_engine_policy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretEnginePasswordPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secret_engine_policy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretEnginePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_secret_engine_policy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_secret_engine_policy_proto_goTypes,
		DependencyIndexes: file_secret_engine_policy_proto_depIdxs,
		MessageInfos:      file_secret_engine_policy_proto_msgTypes,
	}.Build()
	File_secret_engine_policy_proto = out.File
	file_secret_engine_policy_proto_rawDesc = nil
	file_secret_engine_policy_proto_goTypes = nil
	file_secret_engine_policy_proto_depIdxs = nil
}
